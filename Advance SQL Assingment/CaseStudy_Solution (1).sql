-- case study 
create database case_study;
use case_study;

-- Section A
-- 1.Read the data from all tables.
select * from customer;
select * from orderitem;
select * from orders;
select * from product;
select * from supplier;

-- 2.Find the country wise count of customers.

select country , count(*)
from customer
group by country;

-- 3.Display the products which are not discontinued.

select * from product
where isdiscontinued = 0;

-- 4.Display the list of companies along with the product name that they are supplying.

select companyname,productname
from supplier s join product p on s.id=p.supplierid
group by companyname,productname;

-- 5.Display customer's information who stays in 'Mexico'

select * from customer where country ='Mexico';

-- 6.Display the costliest item that is ordered by the customer.


select distinct productid from orderitem where orderid in (
select id from orders where UnitPrice =
(select max(UnitPrice) from orderitem));


-- 7.Display supplier id who owns highest number of products.

with atable as
( select supplierid , count(*) as no_of_product from product
group by supplierid
order by no_of_product)
select supplierid from atable where no_of_product = ( select max(no_of_product) from atable);

-- 8.Display month wise and year wise count of the orders placed.

select year(orderdate) as Y,
       month(orderdate) as M,
       count(*) as no_of_orders
       from orders
       group by Y,M;
       
-- 9.Which country has maximum suppliers.

with btable as (select country , count(*) as no_of_suppliers
from supplier
group by country)
select country from btable where no_of_suppliers = ( select max(no_of_suppliers) from btable);

-- 10.Which customers did not place any order.

select * from customer 
where id not in (select customerid from orders);


-- Section B

-- 1.Arrange the product id, product name based on high demand by the customer.

with ctable as 
(select productid , sum(quantity) as sum_of_products from orderitem
group by productid
order by sum_of_products desc )
select id, productname ,sum_of_products from product p join ctable o on p.id=o.productid 
order by sum_of_products desc;

-- 2.Display the number of orders delivered every year.

select year(orderdate) as y, count(*) from orders
group by y;

-- 3.Calculate year-wise total revenue.

select y , sum(total_revenue)
from(
select year(orderdate) as y,
       productid,
       count(*) as countProduct,
       (count(*) * unitprice) as Total_revenue
       from orderitem oi join
       orders o on oi.orderid=o.id
       group by y,productid) as a
       group by y;
       
select year(orderdate) as y,
       sum(totalamount) as Revenue
       from orders
       group by y;
	
SELECT DISTINCT YEAR(orderdate) AS year,
SUM(totalamount)  OVER (PARTITION BY YEAR(orderdate)) AS Year
FROM orders;

-- 4.Display the customer details whose order amount is maximum including his past orders.

with dtable as
(select  customerid, sum(totalamount) as total
from orders
group by customerid)
select * from 
dtable join customer c on dtable.customerid=c.id
where total = ( select max(total) from dtable);

SELECT * FROM CUSTOMER WHERE ID IN
(SELECT customerID FROM orders WHERE totalamount = 
(SELECT max(totalamount) FROM orders));

-- 5.Display total amount ordered by each customer from high to low.

select customerid , sum(totalamount) as total
from orders
group by customerid
order by total desc;


/* A sales and marketing department of this company wants to find out how frequently customer have 
business with them. This can be done in two ways. (Answer Q 6 and Q 7 for the same)
6.	Approach 1. List the current and previous order amount for each customers.
7.	Approach 2. List the current and previous order date for each customers.
*/

select * , lag(totalamount) over (order by customerid) as previous_order from orders;

-- 8.Find out top 3 suppliers in terms of revenue generated by their products.

select supplierid from (select productid,
       count(*) as countProduct,
       (count(*) * unitprice) as Total_revenue
       from orderitem 
       group by productid) as a join product p on a.productid=p.id
       order by total_revenue desc limit 3;

-- 9.Display latest order date (should not be same as first order date) of all the customers
--  with customer details.

select customerid , count(*) as count_ofOrders from orders
group by customerid
having count_oforders >1;

select customerid,orderdate,
count(customerid) over (partition by customerid) as count_of_orders,
nth_value(orderdate,2) over (partition by customerid order by orderdate desc) as latestedate
from orders;

with x as 
(select customerid,orderdate,
count(customerid) over (partition by customerid) as count_of_orders,
first_value(orderdate) over (partition by customerid order by orderdate desc) as latestdate
from orders)
select c.* , x. latestdate from customer c join x on c.id=x.customerid
where x.orderdate=x.latestdate and count_of_orders>1;


-- 10.Display the product name and supplier name for each order.

select distinct companyname,productname,orderid
from supplier s join product p on s.id=p.supplierid
join orderitem o on p.id=o.productid;


-- Section C

-- 1.Fetch the records to display the customer details who ordered more than 10 products in the
--  single order

select orderid, count(*) as CountOfProducts
       from orderitem
       group by orderid
       having countofproducts>10;

with mtable as
(select orderid, count(*) as CountOfProducts
       from orderitem
       group by orderid
       having countofproducts>10)
select c.* from customer c join orders o on c.id = o.CustomerId
join mtable m on o.id=m.orderid;

-- 2.Display all the product details with the ordered quantity size as 1.

select * from product where id in (select distinct productid from orderitem where quantity = 1);

-- 3.Display the compan(y)ies which supplies products whose cost is above 100.

select companyname from supplier where id in ( select supplierid from product where UnitPrice>100);

-- 4.Create a combined list to display customers and supplier list as per the below format.

select 'customer' as type , concat(FirstName,lastname) as contactName, city , country , phone
from customer
union all
select 'supplier' as type , contactName, city , country , phone
from supplier;

-- 5.Display the customer list who belongs to same city and country arrange in country wise.

select c.firstname,c.lastname , c1.firstname,c1.lastname
from customer c join customer c1 on c.country=c1.Country and c.city=c1.Country;

-- section D
/*
1.Company sells the product at different discounted rates. Refer actual product price in product
 table and selling price in the order item table. Write a query to find out total amount saved in
 each order then display the orders from highest to lowest amount saved. */
 
 select p.id,(p.UnitPrice-o.UnitPrice) as Amount_Saved
 from product p join orderitem o on p.id=o.productid;

select orderid,sum(Amount_saved) as TotalAmountSaved
from ( select orderid,p.id,(p.UnitPrice-o.UnitPrice) as Amount_Saved
 from product p join orderitem o on p.id=o.productid) as a
 group by orderid;


/* 2.Mr. Kavin want to become a supplier. He got the database of "Richard's Supply" for reference.
 Help him to pick: 
a. List few products that he should choose based on demand.
b. Who will be the competitors for him for the products suggested in above questions. */

select  productid ,count(*),sum(quantity),
        (count(*) *sum(quantity))as Demand from orderitem
group by ProductId
order by Demand desc limit 20;

with ntable as (
select  productid ,count(*),sum(quantity),
        (count(*) *sum(quantity))as Demand from orderitem
group by ProductId
order by Demand desc limit 20)
select companyname from supplier where id in (select supplierid from product where id in 
											 (select productid from ntable));
                                             
                                             
/* 3.	Create a combined list to display customers and suppliers details considering the 
following criteria 
•	Both customer and supplier belong to the same country
•	Customer who does not have supplier in their country
•	Supplier who does not have customer in their country */

select c.firstname as customerName,
	   s.companyname as Supplier ,
       s.country as country 
       from customer c join supplier s where  c.Country=s.Country;
       
select c.* 
from customer c left join supplier s on c.country=s.country
where s.country is null;

select s.* 
from customer c right join supplier s on c.country=s.country
where c.country is null;

/* 4.Every supplier supplies specific products to the customers. Create a view of suppliers
 and total sales made by their products and write a query on this view to find out top 2 
 suppliers (using windows function RANK() in each country by total sales done by the products. */
 

 create or replace view  Supplier_Product_Sales as (
 select companyname , productname , TotalSalesByProduct ,country
 from (select productid , (count(*) * quantity) as TotalSalesByProduct
 from orderitem
 group by productid) as c join product p on c.productid=p.id
 join supplier s on p.SupplierId=s.id);
 
 select * from (select * , rank() over ( partition by country order by TotalSalesByProduct desc) as ranking
 from Supplier_Product_Sales) as a where ranking in (1,2);
 
 /* 5.	Find out for which products, UK is dependent on other countries for the supply.
 List the countries which are supplying these products in the same list. */
 
select distinct p.productname,c.country as customer_country, s.country as Supplier_country
from customer c join orders o on o.customerid=c.id
join orderitem oi on o.id=oi.OrderId
join product p on p.id=oi.productid 
join supplier s on p.supplierID=s.ID
where c.country='UK' and s.country!='UK';

 
 
 
 
 
 
 
 
